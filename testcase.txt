


Test Case   |   Scenario    |   Input   | Expected output   |
------------|---------------|-----------|-------------------|
    1       |   NaN         |   "a", 6  |       Error       |
    2       | Correct       |   2, 3    |       5           |
    3       |   negative    |   -2, 2   |       0           |
    4       | no entry      |           |       error



    npm i jest --save-dev


    server.use('*', (req, res) => {
  res.status(404).json({ error: 'Sever is up and running, but the path is incorrect' });

});


const request = require('supertest');
const express = require('express');
const bodyParser = require('body-parser');
const { calculateValue } = require('./index'); // Update the path accordingly
const { server } = require('./index');





// Mock data for testing
const mockData = {
  "model": "Civic",
  "year": 2014
};
it('should return the expected response', async () => {
  const response = await request(server)
    .post('/test')

    .expect(200);

  expect(response.body).toBeDefined();
  expect(response.body).toBe("You're receiving a response!");
});